var N=Object.defineProperty;var A=(c,t,e)=>t in c?N(c,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):c[t]=e;var s=(c,t,e)=>A(c,typeof t!="symbol"?t+"":t,e);const L=c=>c.toISOString().slice(0,19).replace("T"," "),I=(...c)=>{},k=(...c)=>{{const t=new Date,e=L(t),i=String(t.getMilliseconds()).padStart(3,"0");console.log(`[${e}.${i}]`,...c)}};class _{constructor(t){this.mHead=null,this.mTail=null,this.mQueCnt=0,this.mTask=t}send(t){t.setNext(null),this.mTail&&this.mTail.setNext(t),this.mTail=t,this.mHead===null&&(this.mHead=t),this.mQueCnt++}get(){let t=null;return this.mHead&&(t=this.mHead,this.mHead=this.mHead.getNext(),this.mQueCnt--,this.mQueCnt===0&&(this.mTail=null)),t}wait(){for(;;){if(this.isReceived())return this.get();new Promise(t=>setTimeout(t,100))}}isReceived(){return this.mHead!==null}}class M{constructor(t){this.mQueue=new _(t)}getMessage(){let t=null;return this.mQueue&&(t=this.mQueue.get()),t}peekMessage(){let t=null;return this.mQueue&&(t=this.mQueue.get(),t&&I(`mQueue->get(): ${t.getId()}`)),t}sendMessage(t){this.mQueue&&(this.mQueue.send(t),t&&I(`mQueue->send: ${t.getId()}`))}}class o{constructor(t=0,e=null,i=0){this.mId=t,this.mDataLen=i,this.mData=e,this.mNext=null}getTime(){return this.mTime}getId(){return this.mId}getData(){return this.mData}getDataLength(){return this.mDataLen}getNext(){return this.mNext}setNext(t){this.mNext=t}}s(o,"CMD_INIT",17),s(o,"CMD_START",18),s(o,"CMD_GET_CALIBINFO",20),s(o,"CMD_SET_SOROTINFO",21),s(o,"CMD_START_CALIB",22),s(o,"CMD_SET_INDIVIDUAL",23),s(o,"CMD_GET_SOROTINFO",33),s(o,"CMD_CHANGE_SCENARIO",49),s(o,"CMD_INSERT_SCENARIO",50),s(o,"CMD_CLEAR_SCENARIO",51),s(o,"CMD_STOP",52),s(o,"CMD_SET_SCENARIOINFO",53),s(o,"CMD_SYNC",54),s(o,"CMD_INSERT_SUB_LIST",55),s(o,"CMD_INSERT_SCN_LIST",56),s(o,"CMD_COMPLETE_BT",144),s(o,"CMD_CORRECT_COORDINF",145),s(o,"CMD_SONARSENSOR",146),s(o,"ERR_OK",0),s(o,"ERR_EXECCMD",1),s(o,"ERR_SCNRONO",2),s(o,"ERR_CHGSCNRO",3),s(o,"ERR_STATUS",33),s(o,"ERR_COMMAND",65),s(o,"ERR_DATALEN",66),s(o,"ERR_PARAM",67),s(o,"ERR_SEQNO",68),s(o,"ERR_CHECKSUM",69),s(o,"ERR_HARDWARE",97),s(o,"ERR_LOGICAL",145),s(o,"ERR_FATAL",153);const u=class u extends M{constructor(t,e){super(),this.colorMonitor=t,this.hwMonitor=e,this.msecCount=0}start(){console.log("TaskStsMon run"),this.hwMonitor.resetDevice()}run(){let t=this.peekMessage();if(t!==null){switch(t.getId()){case o.CMD_CORRECT_COORDINF:window.HWMONITOR.correctCoordinateInfo(t.getData());break;case o.CMD_SONARSENSOR:window.HWMONITOR.setSonarSwitch(t.getData());break}t=null}this.colorMonitor.read(),this.msecCount===0?(this.msecCount=1,this.hwMonitor.read()):this.msecCount=0}stop(){}static getInstance(){return u.mSingleton==null&&(u.mSingleton=new u(window.COLORMONITOR,window.HWMONITOR)),u.mSingleton}resetMotor(){this.hwMonitor.resetDevice(!0)}getColorInfo(t){Object.assign(t,this.colorMonitor.getColorInfo())}getBodyInfo(t){Object.assign(t,this.hwMonitor.getBodyInfo())}getCoordinateInfo(t){try{Object.assign(t,this.hwMonitor.getCoordinateInfo())}catch(e){console.error(e)}}peekMessage(){return super.peekMessage()}getMessage(){return super.getMessage()}sendMessage(t){super.sendMessage(t)}};s(u,"mSingleton",null);let C=u;class l{constructor(t){this.name=t,this.fg_motor=null,this.pwm=0,this.count=0}setUp(t,e){console.log(`motor setup: ${e}`),console.log(e==="left"?`motor_setup left: ${e}`:`motor_setup other: ${e}`)}getPWM(){return isNaN(this.pwm)?0:this.pwm}setPWM(t){this.pwm=t,this.updateLeftPowerDisplay()}getCount(){let h=0,d=0;const f=this.getPWM();return d+=.1*(1*f-.5*d-.01*.1*Math.sign(d)-.01*.1),h+=.1*d,this.count+=h*window.robot.maxSpeed,this.count}reset(){return 0}updateLeftPowerDisplay(){window.formData.setValue(this.name,this.getPWM())}}s(l,"LEFT",0),s(l,"RIGHT",1),s(l,"MOTOR_NUM",2);const x=20,R={WHITE:0,GRAY:1,BLACK:2,NONE:5};class ${constructor(t,e=x){s(this,"blueCount",0);this.port=t,this.blueCount=0,this.changeCount=e,this.changeRateArray=Array(e).fill(0),this.changeRateIndex=0,this.sumChangeRateArray=0,this.diffSumChangeRateAry=0,this.colorInfo={color:R.NONE,ColorSensorValue:0,diffValue:0,diffSumChangeRateAry:0,diffSumChangeRateAryLast:0}}getBrightness(){return robot.sensor.brightness}read(){const t=this.getBrightness();this.colorInfo.color=t<10?R.BLACK:t>60?R.WHITE:R.GRAY,this.colorInfo.ColorSensorValue=t,this.colorInfo.diffValue=this.getChangeRateWidth(t),this.colorInfo.diffSumChangeRateAryLast=this.colorInfo.diffSumChangeRateAry,this.colorInfo.diffSumChangeRateAry=this.diffSumChangeRateAry}getChangeRateWidth(t){this.changeRateArray[this.changeRateIndex%this.changeCount]=t,this.changeRateIndex++;const e=Math.min(this.changeRateIndex,this.changeCount),i=this.changeRateArray.slice(0,e),a=Math.max(...i),r=Math.min(...i),n=i.reduce((h,d)=>h+d,0);return this.diffSumChangeRateAry=this.sumChangeRateArray-n,this.sumChangeRateArray=n,a-r}getColorInfo(){return this.colorInfo}}class p{constructor(){this.x=0,this.y=0,this.distance=0,this.driveDirection=0,this.driveDirectionAve=0,this.driveDirectionAveLast=0,this.isObstacle=!1}}class U{constructor(t,e){this.motorL=t,this.motorR=e,this.resetDevice(),this.lastDistance=0,this.lastDriveDirection=0,this.spdSmplCnt=0,this.isCorrect={LEFT:!1,RIGHT:!1},this.beforeEncoderValue={LEFT:0,RIGHT:0},this.storedEncoder={LEFT:0,RIGHT:0},this.driveDirectionIdx=0,this.coordinate=new p,this.bodyInfo={EncoderValue:{LEFT:0,RIGHT:0},sonarOn:0,GyroSenserValue:0,SonarValue:0,SonarTarget:{isFound:!1},BattyValue:0,TurnSpeed:0,RunSpeed:0},this.drive_direction_cnt=window.config.robot.direction.drive_direction_cnt,this.driveDirectionAry=Array(window.drive_direction_cnt).fill(0),this.distanceDriveDirectionAry=Array(window.drive_direction_cnt).fill(0),this.speedBuf=Array(window.config.robot.speed.sample_num).fill(0),this.setWheelTransParam(window.config.robot.wheel.radius)}setWheelTransParam(t){this.wheelTransParam=2*Math.PI*t*100/100/360}resetDevice(t=!1){t&&(this.storedEncoder.LEFT+=this.motorL.getCount(),this.storedEncoder.RIGHT+=this.motorR.getCount()),this.motorL.reset(),this.motorR.reset(),this.coordinate=new p,this.bodyInfo={EncoderValue:{LEFT:0,RIGHT:0},sonarOn:0,GyroSenserValue:0,SonarValue:0,SonarTarget:{isFound:!1},BattyValue:0,TurnSpeed:0,RunSpeed:0}}setGyroOffSet(t){this.gyroOffSet=t}read(){let t=this.motorL.getCount(),e=this.motorR.getCount();this.bodyInfo.EncoderValue.LEFT-t>1e4&&(this.bodyInfo.EncoderValue.LEFT=0),this.bodyInfo.EncoderValue.RIGHT-e>1e4&&(this.bodyInfo.EncoderValue.RIGHT=0),this.calcCoordinates(this.storedEncoder.LEFT+t,this.storedEncoder.RIGHT+e),this.bodyInfo.EncoderValue.LEFT=t,this.bodyInfo.EncoderValue.RIGHT=e,this.getSpeed(),this.getDriveDirectionAve()}calcCoordinates(t,e){let i=new Array(l.MOTOR_NUM),a,r,n,h,d,f=new Array(l.MOTOR_NUM);f[l.LEFT]=t,f[l.RIGHT]=e,i[l.LEFT]=this.getMoterMoveDistance(this.beforeEncoderValue.LEFT,t),i[l.RIGHT]=this.getMoterMoveDistance(this.beforeEncoderValue.RIGHT,e),this.beforeEncoderValue.LEFT=t,this.beforeEncoderValue.RIGHT=e,!(i[l.LEFT]===0&&i[l.RIGHT]===0)&&(a=(i[l.LEFT]+i[l.RIGHT])/2,this.coordinate.distance+=a*window.config.robot.scale,i[l.LEFT]!==i[l.RIGHT]?(n=(i[l.LEFT]-i[l.RIGHT])/window.config.robot.wheel.interval,r=this.coordinate.driveDirection+n,r>2*Math.PI?r-=2*Math.PI:r<-2*Math.PI&&(r+=2*Math.PI),this.coordinate.driveDirection=r,h=2*a/n*Math.sin(n/2),d=-n/2+this.coordinate.driveDirection,this.coordinate.x-=h*Math.cos(d),this.coordinate.y+=h*Math.sin(d)):(this.coordinate.x-=a*Math.cos(this.coordinate.driveDirection),this.coordinate.y+=a*Math.sin(this.coordinate.driveDirection)))}getSpeed(){let t=0;this.speedBuf[this.spdSmplCnt]=(this.coordinate.distance-this.lastDistance)*1e3/window.STATUSMONITOR.TASK_PERIOD,this.spdSmplCnt++,this.spdSmplCnt>window.config.robot.speed.sample_num-1&&(this.spdSmplCnt=0);for(let i=0;i<window.config.robot.speed.sample_num;i++)t+=this.speedBuf[i];this.bodyInfo.RunSpeed=t/window.config.robot.speed.sample_num;let e=(this.coordinate.driveDirection-this.lastDriveDirection)*100;e>500||e<-500?this.bodyInfo.TurnSpeed=(this.coordinate.driveDirection+(2*Math.PI-this.lastDriveDirection))*100:this.bodyInfo.TurnSpeed=(this.coordinate.driveDirection-this.lastDriveDirection)*100,this.lastDistance=this.coordinate.distance,this.lastDriveDirection=this.coordinate.driveDirection}getMoterMoveDistance(t,e){return(e-t)*this.wheelTransParam}getDriveDirectionAve(){this.coordinate.distance-this.distanceDriveDirectionAry[this.driveDirectionIdx%this.drive_direction_cnt]>3&&(this.driveDirectionIdx%this.drive_direction_cnt===0&&(this.coordinate.driveDirectionAveLast=this.coordinate.driveDirectionAve),this.driveDirectionIdx++,this.distanceDriveDirectionAry[this.driveDirectionIdx%this.drive_direction_cnt]=this.coordinate.distance,this.driveDirectionAry[this.driveDirectionIdx%this.drive_direction_cnt]=this.coordinate.driveDirection,this.coordinate.driveDirectionAve=this.dAverage(this.driveDirectionAry,this.drive_direction_cnt))}dAverage(t,e){let i=0;for(let a=0;a<e;a++)i+=t[a];return i/e}getBodyInfo(){return this.bodyInfo}getCoordinateInfo(){return this.coordinate}correctCoordinateInfo(t){(t.ACAF&1)===1&&(this.coordinate.x=t.CAPX),(t.ACAF&2)===2&&(this.coordinate.y=t.CAPY),(t.ACAF&4)===4&&(this.coordinate.driveDirection=t.CAPR*Math.PI/180)}setSonarSwitch(t){this.bodyInfo.sonarOn=t,this.bodyInfo.SonarValue=0,this.coordinate.IsObstacle=!1}}class D{constructor(t=0,e=0){this.forward=t,this.turn=e}}class g{constructor(){}reset(){}getRunParameter(t,e){return isNaN(e.FWD)&&(e.FWD=0),isNaN(e.TRN)&&(e.TRN=0),new D(e.FWD,e.TRN)}}typeof window>"u"&&(global.window=global);class S extends g{constructor(t){super(),this.mEdge=t,this.m_IntegVal=0}reset(){}getRunParameter(t,e){const i={forward:e.FWD,turn:0};let a={};if(window.STATUSMONITOR.getColorInfo(a),a.ColorSensorValue>750)return{forward:0,turn:0};const r=this.getProportional(e.KP,t,a,e),n=this.getIntegral(e.KI,r,a,e),h=this.getDifferential(e.KD,t,a,e);let d=r+n+h;return d=Math.max(-100,Math.min(100,d)),i.turn=i.forward===0?0:d,i}getProportional(t,e,i,a){const r=t,n=this.getLineColor(e),h=this.getOutColor(e),d=this.getThresholdOfTargetColor(n,h,a.WPER),f=n-h||1,w=i.ColorSensorValue,O=this.mEdge==="LEFT"?d-w:w-d;let y=r*O*10/f;return Math.max(-100,Math.min(100,y))}getThresholdOfTargetColor(t,e,i){return(t+e)/2-(t-e)*i/100}getIntegral(t,e,i,a){const r=t;if(a.NOBLNCE){let n=r*e/1e3+this.m_IntegVal;const h=e+this.m_IntegVal;return h>100?n=Math.max(0,100-e):h<-100&&(n=Math.min(0,-100-e)),this.m_IntegVal=Math.max(-100,Math.min(100,n)),this.m_IntegVal}else{let n=(i.diffSumChangeRateAryLast-i.diffSumChangeRateAry)/2*.004;return this.mEdge!=="LEFT"&&(n=-n),r*n/10}}getDifferential(t,e,i,a){const r=t,n=this.getLineColor(e)-this.getOutColor(e)||1;let h=i.diffSumChangeRateAry;return this.mEdge!=="LEFT"&&(h=-h),r*h*10/n}getLineColor(t){return t.mCalBlack}getOutColor(t){return t.mCalWhite}}typeof window>"u"&&(global.window=global);class b extends g{constructor(){super(),this.mHasPreDiff=!1,this.mBodyInfo={EncoderValue:{LEFT:0,RIGHT:0},sonarOn:0,GyroSenserValue:0,SonarValue:0,SonarTarget:{isFound:!1},BattyValue:0,TurnSpeed:0,RunSpeed:0}}getRunParameter(t,e){let i={};const a={forward:e.FWD,turn:0};window.STATUSMONITOR.getBodyInfo(i);const r=[0,0];let n=e.TRN;this.mHasPreDiff||(this.mBodyInfo.EncoderValue.LEFT=i.EncoderValue.LEFT,this.mBodyInfo.EncoderValue.RIGHT=i.EncoderValue.RIGHT,this.mHasPreDiff=!0),r.LEFT=i.EncoderValue.LEFT-this.mBodyInfo.EncoderValue.LEFT,r.RIGHT=i.EncoderValue.RIGHT-this.mBodyInfo.EncoderValue.RIGHT,n!==0&&(n>0?r.RIGHT=Math.floor(r.RIGHT*(1+n/100)):r.LEFT=Math.floor(r.LEFT*(1+-n/100)));const h=r.RIGHT-r.LEFT;return n+=h,a.turn=Math.max(-100,Math.min(100,n)),a}}typeof window>"u"&&(global.window=global);class v extends g{constructor(){super(),this.mTurn=0,this.mCount=0}getRunParameter(t,e){return e.TRN>0?this.mTurn<e.TRN&&(this.mTurn+=this.mCount++%3===0?1:0):this.mTurn>e.TRN&&(this.mTurn-=this.mCount++%3===0?1:0),new D(e.FWD,this.mTurn)}reset(){this.mTurn=0,this.mCount=0}}const F=1,G=2,H=3,P=5,T=[{type:F,runMethod:new S("LEFT")},{type:G,runMethod:new S("RIGHT")},{type:H,runMethod:new v},{type:P,runMethod:new b}];class V{static factory(t){for(let e=0;e<T.length;e++)if(t===T[e].type)return T[e].runMethod;return null}}const B=1,m=class m extends M{static getInstance(){return m.instance||(m.instance=new m(window.LEFTMOTOR,window.RIGHTMOTOR,window.ARMMOTOR)),m.instance}constructor(t,e,i){super(),this.motorL=t,this.motorR=e,this.armMotor=i,this.runMethod=null,this.msecCount=0,this.maxCount=0,this.gyroOffsetAdj2=0,this.blnceGyro=0,this.preNoneBalancer=0,this.commandSet={RunInfo:{}},this.calibrationInfo={},this.armCount=0,this.preFwd=0,this.preTurn=0,this.pwmL=0,this.pwmR=0,this.armOnly=!1}start(){console.log("RunCtrl start")}run(){const t=this.peekMessage();if(t)switch(t.getId()){case o.CMD_CHANGE_SCENARIO:this.commandSet=t.getData(),this.changeRunMethod();break}this.msecCount=this.msecCount===0?1:0,this.armOnly||this.controlRun(),this.controlArm()}changeRunMethod(){window.formData.setValue("sno",this.commandSet.SNO),window.formData.setValue("cno",this.commandSet.CNO),window.formData.setValue("fwd",this.commandSet.RunInfo.FWD),window.formData.setValue("trn",this.commandSet.RunInfo.TRN),console.log(`changeRun: FUNCNO=${this.commandSet.RunInfo.FUNCNO} FWD=${this.commandSet.RunInfo.FWD}`),this.runMethod=V.factory(this.commandSet.RunInfo.FUNCNO),this.runMethod&&this.runMethod.reset(),this.armMotor.reset(),this.armCount=this.armMotor.getCount()}controlRun(){if(!this.runMethod){console.log("RunMethod ERROR");return}const t=this.runMethod.getRunParameter(this.calibrationInfo,this.commandSet.RunInfo);if(this.commandSet.RunInfo.NOBLNCE===0){if(this.preNoneBalancer===1&&window.STATUSMONITOR.resetMotor(),this.msecCount===0){const e={};window.STATUSMONITOR.getBodyInfo(e),this.blnceGyro=this.calibrationInfo.gyroOffset+this.commandSet.RunInfo.GYOFST+this.gyroOffsetAdj2,this.preFwd=t.forward,this.preTurn=t.turn}else if(this.preFwd===t.forward&&this.preTurn!==0){if(t.forward===0)this.pwmL=this.pwmL*t.turn/this.preTurn,this.pwmR=this.pwmR*t.turn/this.preTurn;else{const e=Math.abs(this.pwmL-this.pwmR)/2,i=e*t.turn/this.preTurn-e;this.pwmL+=i,this.pwmR-=i}this.pwmL=Math.max(-100,Math.min(100,this.pwmL)),this.pwmR=Math.max(-100,Math.min(100,this.pwmR))}}else if(this.commandSet.RunInfo.NOBLNCE===1){let e=t.forward+t.turn/2,i=t.forward-t.turn/2;e>100?(this.pwmL=100,this.pwmR=i-(e-100)):i>100?(this.pwmR=100,this.pwmL=e-(i-100)):(this.pwmL=e,this.pwmR=i),t.forward===0&&(this.pwmL=this.commandSet.RunInfo.TRN/2,this.pwmR=-this.commandSet.RunInfo.TRN/2),this.preFwd=t.forward,this.preTurn=t.turn}this.preNoneBalancer=this.commandSet.RunInfo.NOBLNCE,this.motorL.setPWM(this.pwmL),this.motorR.setPWM(this.pwmR),this.commandSet.RunInfo.SPFLG&B?(this.gyroOffsetAdj2=-(this.pwmL+this.pwmR)*.2,this.gyroOffsetAdj2=Math.max(-20,Math.min(0,this.gyroOffsetAdj2))):this.gyroOffsetAdj2=0}controlArm(){if(!this.commandSet.RunInfo||!this.commandSet.RunInfo.ARMANG)return;const t=this.commandSet.RunInfo.ARMANG;if(t!==0){const e=this.armMotor.getCount()-this.armCount;let i=0;t>0?i=e<t?100:0:i=e>t?-100:0,this.armMotor.setPWM(i)}}stop(){}getRunConInfo(){return{SNO:this.commandSet.SNO,CNO:this.commandSet.CNO,fwd:this.preFwd,turn:this.preTurn,pwmL:this.pwmL,pwmR:this.pwmR,gyro:this.blnceGyro}}setCalibrationInfo(t){this.calibrationInfo={...t}}peekMessage(){return super.peekMessage()}getMessage(){return super.getMessage()}sendMessage(t){super.sendMessage(t)}};s(m,"instance",null);let E=m;class Q{constructor(t,e){this.name=t;const i=.5;this.scale=i,this.x=e.robot.initial_position.x,this.y=e.robot.initial_position.y,this.angle=e.robot.initial_position.angle*(Math.PI/180),this.width=e.robot.width*i,this.height=e.robot.height*i,this.wheelBase=e.robot.wheel.interval*i,this.wheelRadius=e.robot.wheel.radius*i,this.wheelWidth=5*i,this.leftPower=0,this.rightPower=0,this.maxSpeed=e.robot.speed.max_speed,this.color=e.robot.color,this.sensorColor=e.robot.sensorColor,this.wheelColor=e.robot.wheelColor,this.axleColor=e.robot.axleColor,this.sensor={r:0,g:0,b:0,brightness:0},this.status="idle",console.log(`${this.name} ロボットが起動しました。初期位置: (${this.x}, ${this.y})`)}move(t,e,i,a){const r=parseFloat(t),n=parseFloat(e);this.angle=i+a*(Math.PI/180);const h=(r+n)/2*this.maxSpeed/1e3;isNaN(h)||(this.x+=h*Math.cos(this.angle),this.y+=h*Math.sin(this.angle))}stop(){if(this.status==="idle"){console.log(`${this.name} は既に停止しています。`);return}console.log(`${this.name} が動作を停止しました。`),this.status="idle"}moveByVelocity(t,e,i){typeof t!="number"&&(t=0),typeof e!="number"&&(e=0),(typeof i!="number"||i<=0)&&(i=.1),this.angle+=e*i,this.x+=t*Math.cos(this.angle)*i,this.y+=t*Math.sin(this.angle)*i}getPose(){return{x:this.x,y:this.y,angle:this.angle}}getStatus(){return`${this.name} の現在の状態: ${this.status}, 位置: (${this.x}, ${this.y})`}}export{$ as C,S as E,U as H,b as L,o as M,Q as R,l as S,C as a,E as b,v as c,M as d,I as e,k as f};
